{"version":3,"sources":["../../../../../packages/core/src/lib/utils.ts"],"sourcesContent":["import { mkdirSync } from 'fs';\r\nimport { tmpdir } from 'os';\r\nimport path from 'path';\r\n\r\nexport function sleep(ms = 1000) {\r\n    return new Promise<void>((res) => setTimeout(() => res(), ms));\r\n}\r\n\r\nexport function ensureDirSync(dir: string) {\r\n    try {\r\n        mkdirSync(dir, { recursive: true });\r\n    } catch {\r\n        // noop\r\n    }\r\n}\r\n\r\nexport function createTmpDir(name = 'wcferry') {\r\n    return path.join(tmpdir(), name);\r\n}\r\n\r\nexport function uint8Array2str(arr: Uint8Array) {\r\n    return Buffer.from(arr).toString();\r\n}\r\n\r\n// because all the fields are get by getFieldWithDefault, so every fields should have a default value\r\nexport type ToPlainType<T extends { toObject: () => unknown }> = Required<\r\n    ReturnType<T['toObject']>\r\n>;\r\n"],"names":["createTmpDir","ensureDirSync","sleep","uint8Array2str","ms","Promise","res","setTimeout","dir","mkdirSync","recursive","name","path","join","tmpdir","arr","Buffer","from","toString"],"mappings":";;;;;;;;;;;IAgBgBA,YAAY;eAAZA;;IARAC,aAAa;eAAbA;;IAJAC,KAAK;eAALA;;IAgBAC,cAAc;eAAdA;;;;oBApBU;oBACH;+DACN;AAEV,SAASD,MAAME,KAAK,IAAI;IAC3B,OAAO,IAAIC,QAAc,CAACC,MAAQC,WAAW,IAAMD,OAAOF;AAC9D;AAEO,SAASH,cAAcO,GAAW;IACrC,IAAI;QACAC,IAAAA,aAAS,EAACD,KAAK;YAAEE,WAAW;QAAK;IACrC,EAAE,UAAM;IACJ,OAAO;IACX;AACJ;AAEO,SAASV,aAAaW,OAAO,SAAS;IACzC,OAAOC,aAAI,CAACC,IAAI,CAACC,IAAAA,UAAM,KAAIH;AAC/B;AAEO,SAASR,eAAeY,GAAe;IAC1C,OAAOC,OAAOC,IAAI,CAACF,KAAKG,QAAQ;AACpC"}