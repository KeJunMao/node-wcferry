{"version":3,"sources":["../../../../../../packages/core/src/lib/proto-generated/extrabyte.ts"],"sourcesContent":["/* eslint-disable */\n //@ts-nocheck\n/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.27.1\n * source: extrabyte.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\nexport namespace com.iamteer.wcf {\n    export class Extra extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(data?: any[] | {\n            properties?: Extra.Property[];\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"properties\" in data && data.properties != undefined) {\n                    this.properties = data.properties;\n                }\n            }\n        }\n        get properties() {\n            return pb_1.Message.getRepeatedWrapperField(this, Extra.Property, 3) as Extra.Property[];\n        }\n        set properties(value: Extra.Property[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 3, value);\n        }\n        static fromObject(data: {\n            properties?: ReturnType<typeof Extra.Property.prototype.toObject>[];\n        }): Extra {\n            const message = new Extra({});\n            if (data.properties != null) {\n                message.properties = data.properties.map(item => Extra.Property.fromObject(item));\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                properties?: ReturnType<typeof Extra.Property.prototype.toObject>[];\n            } = {};\n            if (this.properties != null) {\n                data.properties = this.properties.map((item: Extra.Property) => item.toObject());\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.properties.length)\n                writer.writeRepeatedMessage(3, this.properties, (item: Extra.Property) => item.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Extra {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Extra();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 3:\n                        reader.readMessage(message.properties, () => pb_1.Message.addToRepeatedWrapperField(message, 3, Extra.Property.deserialize(reader), Extra.Property));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): Extra {\n            return Extra.deserialize(bytes);\n        }\n    }\n    export namespace Extra {\n        export enum PropertyKey {\n            Field_0 = 0,\n            Sign = 2,\n            Thumb = 3,\n            Extra = 4,\n            Xml = 7\n        }\n        export class Property extends pb_1.Message {\n            #one_of_decls: number[][] = [];\n            constructor(data?: any[] | {\n                type?: Extra.PropertyKey;\n                value?: string;\n            }) {\n                super();\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"type\" in data && data.type != undefined) {\n                        this.type = data.type;\n                    }\n                    if (\"value\" in data && data.value != undefined) {\n                        this.value = data.value;\n                    }\n                }\n            }\n            get type() {\n                return pb_1.Message.getFieldWithDefault(this, 1, Extra.PropertyKey.Field_0) as Extra.PropertyKey;\n            }\n            set type(value: Extra.PropertyKey) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get value() {\n                return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n            }\n            set value(value: string) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            static fromObject(data: {\n                type?: Extra.PropertyKey;\n                value?: string;\n            }): Property {\n                const message = new Property({});\n                if (data.type != null) {\n                    message.type = data.type;\n                }\n                if (data.value != null) {\n                    message.value = data.value;\n                }\n                return message;\n            }\n            toObject() {\n                const data: {\n                    type?: Extra.PropertyKey;\n                    value?: string;\n                } = {};\n                if (this.type != null) {\n                    data.type = this.type;\n                }\n                if (this.value != null) {\n                    data.value = this.value;\n                }\n                return data;\n            }\n            serialize(): Uint8Array;\n            serialize(w: pb_1.BinaryWriter): void;\n            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.type != Extra.PropertyKey.Field_0)\n                    writer.writeEnum(1, this.type);\n                if (this.value.length)\n                    writer.writeString(2, this.value);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Property {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Property();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.type = reader.readEnum();\n                            break;\n                        case 2:\n                            message.value = reader.readString();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary(): Uint8Array {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes: Uint8Array): Property {\n                return Property.deserialize(bytes);\n            }\n        }\n    }\n}\n"],"names":["com","iamteer","wcf","Extra","pb_1","Message","properties","getRepeatedWrapperField","Property","value","setRepeatedWrapperField","fromObject","data","message","map","item","toObject","serialize","w","writer","BinaryWriter","length","writeRepeatedMessage","getResultBuffer","deserialize","bytes","reader","BinaryReader","nextField","isEndGroup","getFieldNumber","readMessage","addToRepeatedWrapperField","skipField","serializeBinary","deserializeBinary","constructor","one_of_decls","initialize","Array","isArray","undefined","PropertyKey","type","getFieldWithDefault","Field_0","setField","writeEnum","writeString","readEnum","readString"],"mappings":"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"}