{"version":3,"sources":["../../../../../../packages/core/src/lib/proto-generated/roomdata.ts"],"sourcesContent":["/* eslint-disable */\n //@ts-nocheck\n/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 5.27.1\n * source: roomdata.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\nexport namespace com.iamteer.wcf {\n    export class RoomData extends pb_1.Message {\n        #one_of_decls: number[][] = [];\n        constructor(data?: any[] | {\n            members?: RoomData.RoomMember[];\n            field_2?: number;\n            field_3?: number;\n            field_4?: number;\n            room_capacity?: number;\n            field_6?: number;\n            field_7?: string;\n            field_8?: string;\n        }) {\n            super();\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"members\" in data && data.members != undefined) {\n                    this.members = data.members;\n                }\n                if (\"field_2\" in data && data.field_2 != undefined) {\n                    this.field_2 = data.field_2;\n                }\n                if (\"field_3\" in data && data.field_3 != undefined) {\n                    this.field_3 = data.field_3;\n                }\n                if (\"field_4\" in data && data.field_4 != undefined) {\n                    this.field_4 = data.field_4;\n                }\n                if (\"room_capacity\" in data && data.room_capacity != undefined) {\n                    this.room_capacity = data.room_capacity;\n                }\n                if (\"field_6\" in data && data.field_6 != undefined) {\n                    this.field_6 = data.field_6;\n                }\n                if (\"field_7\" in data && data.field_7 != undefined) {\n                    this.field_7 = data.field_7;\n                }\n                if (\"field_8\" in data && data.field_8 != undefined) {\n                    this.field_8 = data.field_8;\n                }\n            }\n        }\n        get members() {\n            return pb_1.Message.getRepeatedWrapperField(this, RoomData.RoomMember, 1) as RoomData.RoomMember[];\n        }\n        set members(value: RoomData.RoomMember[]) {\n            pb_1.Message.setRepeatedWrapperField(this, 1, value);\n        }\n        get field_2() {\n            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;\n        }\n        set field_2(value: number) {\n            pb_1.Message.setField(this, 2, value);\n        }\n        get field_3() {\n            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;\n        }\n        set field_3(value: number) {\n            pb_1.Message.setField(this, 3, value);\n        }\n        get field_4() {\n            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;\n        }\n        set field_4(value: number) {\n            pb_1.Message.setField(this, 4, value);\n        }\n        get room_capacity() {\n            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;\n        }\n        set room_capacity(value: number) {\n            pb_1.Message.setField(this, 5, value);\n        }\n        get field_6() {\n            return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;\n        }\n        set field_6(value: number) {\n            pb_1.Message.setField(this, 6, value);\n        }\n        get field_7() {\n            return pb_1.Message.getFieldWithDefault(this, 7, \"0\") as string;\n        }\n        set field_7(value: string) {\n            pb_1.Message.setField(this, 7, value);\n        }\n        get field_8() {\n            return pb_1.Message.getFieldWithDefault(this, 8, \"0\") as string;\n        }\n        set field_8(value: string) {\n            pb_1.Message.setField(this, 8, value);\n        }\n        static fromObject(data: {\n            members?: ReturnType<typeof RoomData.RoomMember.prototype.toObject>[];\n            field_2?: number;\n            field_3?: number;\n            field_4?: number;\n            room_capacity?: number;\n            field_6?: number;\n            field_7?: string;\n            field_8?: string;\n        }): RoomData {\n            const message = new RoomData({});\n            if (data.members != null) {\n                message.members = data.members.map(item => RoomData.RoomMember.fromObject(item));\n            }\n            if (data.field_2 != null) {\n                message.field_2 = data.field_2;\n            }\n            if (data.field_3 != null) {\n                message.field_3 = data.field_3;\n            }\n            if (data.field_4 != null) {\n                message.field_4 = data.field_4;\n            }\n            if (data.room_capacity != null) {\n                message.room_capacity = data.room_capacity;\n            }\n            if (data.field_6 != null) {\n                message.field_6 = data.field_6;\n            }\n            if (data.field_7 != null) {\n                message.field_7 = data.field_7;\n            }\n            if (data.field_8 != null) {\n                message.field_8 = data.field_8;\n            }\n            return message;\n        }\n        toObject() {\n            const data: {\n                members?: ReturnType<typeof RoomData.RoomMember.prototype.toObject>[];\n                field_2?: number;\n                field_3?: number;\n                field_4?: number;\n                room_capacity?: number;\n                field_6?: number;\n                field_7?: string;\n                field_8?: string;\n            } = {};\n            if (this.members != null) {\n                data.members = this.members.map((item: RoomData.RoomMember) => item.toObject());\n            }\n            if (this.field_2 != null) {\n                data.field_2 = this.field_2;\n            }\n            if (this.field_3 != null) {\n                data.field_3 = this.field_3;\n            }\n            if (this.field_4 != null) {\n                data.field_4 = this.field_4;\n            }\n            if (this.room_capacity != null) {\n                data.room_capacity = this.room_capacity;\n            }\n            if (this.field_6 != null) {\n                data.field_6 = this.field_6;\n            }\n            if (this.field_7 != null) {\n                data.field_7 = this.field_7;\n            }\n            if (this.field_8 != null) {\n                data.field_8 = this.field_8;\n            }\n            return data;\n        }\n        serialize(): Uint8Array;\n        serialize(w: pb_1.BinaryWriter): void;\n        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.members.length)\n                writer.writeRepeatedMessage(1, this.members, (item: RoomData.RoomMember) => item.serialize(writer));\n            if (this.field_2 != 0)\n                writer.writeInt32(2, this.field_2);\n            if (this.field_3 != 0)\n                writer.writeInt32(3, this.field_3);\n            if (this.field_4 != 0)\n                writer.writeInt32(4, this.field_4);\n            if (this.room_capacity != 0)\n                writer.writeInt32(5, this.room_capacity);\n            if (this.field_6 != 0)\n                writer.writeInt32(6, this.field_6);\n            if (this.field_7 != \"0\")\n                writer.writeInt64String(7, this.field_7);\n            if (this.field_8 != \"0\")\n                writer.writeInt64String(8, this.field_8);\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RoomData {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RoomData();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        reader.readMessage(message.members, () => pb_1.Message.addToRepeatedWrapperField(message, 1, RoomData.RoomMember.deserialize(reader), RoomData.RoomMember));\n                        break;\n                    case 2:\n                        message.field_2 = reader.readInt32();\n                        break;\n                    case 3:\n                        message.field_3 = reader.readInt32();\n                        break;\n                    case 4:\n                        message.field_4 = reader.readInt32();\n                        break;\n                    case 5:\n                        message.room_capacity = reader.readInt32();\n                        break;\n                    case 6:\n                        message.field_6 = reader.readInt32();\n                        break;\n                    case 7:\n                        message.field_7 = reader.readInt64String();\n                        break;\n                    case 8:\n                        message.field_8 = reader.readInt64String();\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary(): Uint8Array {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes: Uint8Array): RoomData {\n            return RoomData.deserialize(bytes);\n        }\n    }\n    export namespace RoomData {\n        export class RoomMember extends pb_1.Message {\n            #one_of_decls: number[][] = [];\n            constructor(data?: any[] | {\n                wxid?: string;\n                name?: string;\n                state?: number;\n            }) {\n                super();\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"wxid\" in data && data.wxid != undefined) {\n                        this.wxid = data.wxid;\n                    }\n                    if (\"name\" in data && data.name != undefined) {\n                        this.name = data.name;\n                    }\n                    if (\"state\" in data && data.state != undefined) {\n                        this.state = data.state;\n                    }\n                }\n            }\n            get wxid() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\") as string;\n            }\n            set wxid(value: string) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get name() {\n                return pb_1.Message.getFieldWithDefault(this, 2, \"\") as string;\n            }\n            set name(value: string) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get state() {\n                return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;\n            }\n            set state(value: number) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            static fromObject(data: {\n                wxid?: string;\n                name?: string;\n                state?: number;\n            }): RoomMember {\n                const message = new RoomMember({});\n                if (data.wxid != null) {\n                    message.wxid = data.wxid;\n                }\n                if (data.name != null) {\n                    message.name = data.name;\n                }\n                if (data.state != null) {\n                    message.state = data.state;\n                }\n                return message;\n            }\n            toObject() {\n                const data: {\n                    wxid?: string;\n                    name?: string;\n                    state?: number;\n                } = {};\n                if (this.wxid != null) {\n                    data.wxid = this.wxid;\n                }\n                if (this.name != null) {\n                    data.name = this.name;\n                }\n                if (this.state != null) {\n                    data.state = this.state;\n                }\n                return data;\n            }\n            serialize(): Uint8Array;\n            serialize(w: pb_1.BinaryWriter): void;\n            serialize(w?: pb_1.BinaryWriter): Uint8Array | void {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.wxid.length)\n                    writer.writeString(1, this.wxid);\n                if (this.name.length)\n                    writer.writeString(2, this.name);\n                if (this.state != 0)\n                    writer.writeInt32(3, this.state);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RoomMember {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RoomMember();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.wxid = reader.readString();\n                            break;\n                        case 2:\n                            message.name = reader.readString();\n                            break;\n                        case 3:\n                            message.state = reader.readInt32();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary(): Uint8Array {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes: Uint8Array): RoomMember {\n                return RoomMember.deserialize(bytes);\n            }\n        }\n    }\n}\n"],"names":["com","iamteer","wcf","RoomData","pb_1","Message","members","getRepeatedWrapperField","RoomMember","value","setRepeatedWrapperField","field_2","getFieldWithDefault","setField","field_3","field_4","room_capacity","field_6","field_7","field_8","fromObject","data","message","map","item","toObject","serialize","w","writer","BinaryWriter","length","writeRepeatedMessage","writeInt32","writeInt64String","getResultBuffer","deserialize","bytes","reader","BinaryReader","nextField","isEndGroup","getFieldNumber","readMessage","addToRepeatedWrapperField","readInt32","readInt64String","skipField","serializeBinary","deserializeBinary","constructor","one_of_decls","initialize","Array","isArray","undefined","wxid","name","state","writeString","readString"],"mappings":"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"}