{"version":3,"sources":["../../../../../packages/core/src/lib/client.ts"],"sourcesContent":["import os from 'os';\r\nimport { Socket, SocketOptions } from '@rustup/nng';\r\nimport * as cp from 'child_process';\r\nimport debug from 'debug';\r\nimport { wcf } from './proto-generated/wcf';\r\nimport * as rd from './proto-generated/roomdata';\r\nimport * as eb from './proto-generated/extrabyte';\r\nimport { EventEmitter } from 'events';\r\nimport {\r\n    createTmpDir,\r\n    ensureDirSync,\r\n    sleep,\r\n    uint8Array2str,\r\n    type ToPlainType,\r\n} from './utils';\r\nimport { FileRef, FileSavableInterface } from './file-ref';\r\nimport { Message } from './message';\r\nimport path from 'path';\r\nexport type UserInfo = ToPlainType<wcf.UserInfo>;\r\nexport type Contact = ToPlainType<wcf.RpcContact>;\r\nexport type DbTable = ToPlainType<wcf.DbTable>;\r\n\r\nexport interface WcferryOptions {\r\n    port?: number;\r\n    /** if host is empty, the program will try to load wcferry.exe and *.dll */\r\n    host?: string;\r\n    socketOptions?: SocketOptions;\r\n    /** the cache dir to hold temp files, defaults to `os.tmpdir()/wcferry`  */\r\n    cacheDir?: string;\r\n    // 当使用wcferry.on(...)监听消息时，是否接受朋友圈消息\r\n    recvPyq?: boolean;\r\n}\r\n\r\nconst logger = debug('wcferry:client');\r\n\r\nexport class Wcferry {\r\n    readonly NotFriend = {\r\n        fmessage: '朋友推荐消息',\r\n        medianote: '语音记事本',\r\n        floatbottle: '漂流瓶',\r\n        filehelper: '文件传输助手',\r\n        newsapp: '新闻',\r\n    };\r\n\r\n    private isMsgReceiving = false;\r\n    private msgDispose?: () => void;\r\n    private socket: Socket;\r\n    private readonly localMode;\r\n    private readonly msgEventSub = new EventEmitter();\r\n    private options: Required<WcferryOptions>;\r\n    constructor(options?: WcferryOptions) {\r\n        this.localMode = !options?.host;\r\n        this.options = {\r\n            port: options?.port || 10086,\r\n            host: options?.host || '127.0.0.1',\r\n            socketOptions: options?.socketOptions ?? {},\r\n            cacheDir: options?.cacheDir || createTmpDir(),\r\n            recvPyq: !!options?.recvPyq,\r\n        };\r\n\r\n        ensureDirSync(this.options.cacheDir);\r\n\r\n        this.msgEventSub.setMaxListeners(0);\r\n        this.socket = new Socket(this.options.socketOptions);\r\n    }\r\n\r\n    private trapOnExit() {\r\n        process.on('exit', () => this.stop());\r\n    }\r\n\r\n    get connected() {\r\n        return this.socket.connected();\r\n    }\r\n    get msgReceiving() {\r\n        return this.isMsgReceiving;\r\n    }\r\n\r\n    private createUrl(channel: 'cmd' | 'msg' = 'cmd') {\r\n        const url = `tcp://${this.options.host}:${\r\n            this.options.port + (channel === 'cmd' ? 0 : 1)\r\n        }`;\r\n        logger(`wcf ${channel} url: %s`, url);\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 设置是否接受朋友圈消息\r\n     */\r\n    set recvPyq(pyq: boolean) {\r\n        if (this.options.recvPyq === pyq) {\r\n            return;\r\n        }\r\n        this.options.recvPyq = pyq;\r\n        if (this.connected) {\r\n            this.disableMsgReceiving();\r\n            this.enableMsgReceiving();\r\n        }\r\n    }\r\n\r\n    get recvPyq(): boolean {\r\n        return this.options.recvPyq;\r\n    }\r\n\r\n    private get msgListenerCount() {\r\n        return this.msgEventSub.listenerCount('wxmsg');\r\n    }\r\n\r\n    start() {\r\n        try {\r\n            this.execDLL('start');\r\n            this.socket.connect(this.createUrl());\r\n            this.trapOnExit();\r\n            if (this.msgListenerCount > 0) {\r\n                this.enableMsgReceiving();\r\n            }\r\n        } catch (err) {\r\n            logger('cannot connect to wcf RPC server, did wcf.exe started?');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    execDLL(verb: 'start' | 'stop') {\r\n        if (!this.localMode) {\r\n            return;\r\n        }\r\n        const scriptPath = path.resolve(__dirname, '../../scripts/wcferry.ps1');\r\n        const process = cp.spawnSync(\r\n            'powershell',\r\n            [\r\n                // '-NonInteractive',\r\n                '-ExecutionPolicy Unrestricted',\r\n                `-File ${scriptPath} -Verb ${verb} -Port ${this.options.port}`,\r\n            ],\r\n            { shell: true, stdio: 'inherit' }\r\n        );\r\n        if (process.error || process.status !== 0) {\r\n            throw new Error(\r\n                `Cannot ${verb} wcferry DLL: ${\r\n                    process.error || `exit ${process.status}`\r\n                }`\r\n            );\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        logger('Closing conneciton...');\r\n        this.disableMsgReceiving();\r\n        this.socket.close();\r\n        this.execDLL('stop');\r\n    }\r\n\r\n    private sendRequest(req: wcf.Request): wcf.Response {\r\n        const data = req.serialize();\r\n        const buf = this.socket.send(Buffer.from(data));\r\n        const res = wcf.Response.deserialize(buf);\r\n        return res;\r\n    }\r\n\r\n    /** 是否已经登录 */\r\n    isLogin(): boolean {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_IS_LOGIN,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status == 1;\r\n    }\r\n\r\n    /**获取登录账号wxid */\r\n    getSelfWxid(): string {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_SELF_WXID,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.str;\r\n    }\r\n\r\n    /** 获取登录账号个人信息 */\r\n    getUserInfo(): UserInfo {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_USER_INFO,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.ui;\r\n    }\r\n\r\n    /** 获取完整通讯录 */\r\n    getContacts(): Contact[] {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_CONTACTS,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.contacts.contacts.map((c) => c.toObject() as Contact);\r\n    }\r\n\r\n    /** 通过 wxid 查询微信号昵称等信息 */\r\n    getContact(wxid: string): Contact | undefined {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_CONTACT_INFO,\r\n            str: wxid,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.contacts.contacts[0].toObject() as Contact;\r\n    }\r\n\r\n    /** 获取所有数据库 */\r\n    getDbNames(): string[] {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_DB_NAMES,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.dbs.names;\r\n    }\r\n\r\n    /** 获取数据库中所有表 */\r\n    getDbTables(db: string): DbTable[] {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_DB_TABLES,\r\n            str: db,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.tables.tables.map((t) => t.toObject() as DbTable);\r\n    }\r\n\r\n    /**\r\n     * 执行 SQL 查询，如果数据量大注意分页\r\n     * @param db\r\n     * @param sql\r\n     */\r\n    dbSqlQuery(\r\n        db: string,\r\n        sql: string\r\n    ): Record<string, string | number | Buffer | undefined>[] {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_EXEC_DB_QUERY,\r\n            query: new wcf.DbQuery({ db, sql }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        const rows = rsp.rows.rows;\r\n        return rows.map((r) =>\r\n            Object.fromEntries(\r\n                r.fields.map((f) => [f.column, parseDbField(f.type, f.content)])\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 获取消息类型\r\n     * {\"47\": \"石头剪刀布 | 表情图片\", \"62\": \"小视频\", \"43\": \"视频\", \"1\": \"文字\", \"10002\": \"撤回消息\", \"40\": \"POSSIBLEFRIEND_MSG\", \"10000\": \"红包、系统消息\", \"37\": \"好友确认\", \"48\": \"位置\", \"42\": \"名片\", \"49\": \"共享实时位置、文件、转账、链接\", \"3\": \"图片\", \"34\": \"语音\", \"9999\": \"SYSNOTICE\", \"52\": \"VOIPNOTIFY\", \"53\": \"VOIPINVITE\", \"51\": \"微信初始化\", \"50\": \"VOIPMSG\"}\r\n     */\r\n    getMsgTypes(): Map<number, string> {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_MSG_TYPES,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.types.types;\r\n    }\r\n\r\n    /**\r\n     * 刷新朋友圈\r\n     * @param id 开始 id，0 为最新页 (string based uint64)\r\n     * @returns 1 为成功，其他失败\r\n     */\r\n    refreshPyq(id: string): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_REFRESH_PYQ,\r\n            ui64: id,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /** 获取群聊列表 */\r\n    getChatRooms(): Contact[] {\r\n        const contacts = this.getContacts();\r\n        return contacts.filter((c) => c.wxid.endsWith('@chatroom'));\r\n    }\r\n\r\n    /**\r\n     * 获取好友列表\r\n     * @returns\r\n     */\r\n    getFriends() {\r\n        const contacts = this.getContacts();\r\n        return contacts.filter(\r\n            (c) =>\r\n                !c.wxid.endsWith('@chatroom') &&\r\n                !c.wxid.startsWith('gh_') &&\r\n                !Object.hasOwn(this.NotFriend, c.wxid)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 获取群成员\r\n     * @param roomid 群的 id\r\n     * @param times 重试次数\r\n     * @returns 群成员列表: {wxid1: 昵称1, wxid2: 昵称2, ...}\r\n     */\r\n    async getChatRoomMembers(\r\n        roomid: string,\r\n        times = 5\r\n    ): Promise<Record<string, string>> {\r\n        if (times === 0) {\r\n            return {};\r\n        }\r\n        const [room] = this.dbSqlQuery(\r\n            'MicroMsg.db',\r\n            `SELECT RoomData FROM ChatRoom WHERE ChatRoomName = '${roomid}';`\r\n        );\r\n        if (!room) {\r\n            await sleep();\r\n            return this.getChatRoomMembers(roomid, times - 1) ?? {};\r\n        }\r\n\r\n        const r = rd.com.iamteer.wcf.RoomData.deserialize(\r\n            room['RoomData'] as Buffer\r\n        );\r\n\r\n        const userRds = this.dbSqlQuery(\r\n            'MicroMsg.db',\r\n            'SELECT UserName, NickName FROM Contact;'\r\n        );\r\n\r\n        const userDict = Object.fromEntries(\r\n            userRds.map((u) => [u['UserName'], u['NickName']] as const)\r\n        );\r\n\r\n        return Object.fromEntries(\r\n            r.members.map((member) => [\r\n                member.wxid,\r\n                member.name || userDict[member.wxid],\r\n            ])\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 获取群成员昵称\r\n     * @param wxid\r\n     * @param roomid\r\n     * @returns 群名片\r\n     */\r\n    getAliasInChatRoom(wxid: string, roomid: string): string | undefined {\r\n        const [room] = this.dbSqlQuery(\r\n            'MicroMsg.db',\r\n            `SELECT RoomData FROM ChatRoom WHERE ChatRoomName = '${roomid}';`\r\n        );\r\n        if (!room) {\r\n            return undefined;\r\n        }\r\n\r\n        const roomData = rd.com.iamteer.wcf.RoomData.deserialize(\r\n            room['RoomData'] as Buffer\r\n        );\r\n        return (\r\n            roomData.members.find((m) => m.wxid === wxid)?.name ||\r\n            this.getNickName(wxid)?.[0]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * be careful to SQL injection\r\n     * @param wxids wxids\r\n     */\r\n    getNickName(...wxids: string[]): Array<string | undefined> {\r\n        const rows = this.dbSqlQuery(\r\n            'MicroMsg.db',\r\n            `SELECT NickName FROM Contact WHERE UserName in (${wxids\r\n                .map((id) => `'${id}'`)\r\n                .join(',')});`\r\n        );\r\n        return rows.map((row) => row['NickName'] as string | undefined);\r\n    }\r\n\r\n    /**\r\n     * 邀请群成员\r\n     * @param roomid\r\n     * @param wxids\r\n     * @returns int32 1 为成功，其他失败\r\n     */\r\n    inviteChatroomMembers(roomid: string, wxids: string[]): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_INV_ROOM_MEMBERS,\r\n            m: new wcf.MemberMgmt({\r\n                roomid,\r\n                wxids: wxids.join(',').replaceAll(' ', ''),\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 添加群成员\r\n     * @param roomid\r\n     * @param wxids\r\n     * @returns int32 1 为成功，其他失败\r\n     */\r\n    addChatRoomMembers(roomid: string, wxids: string[]): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_ADD_ROOM_MEMBERS,\r\n            m: new wcf.MemberMgmt({\r\n                roomid,\r\n                wxids: wxids.join(',').replaceAll(' ', ''),\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 删除群成员\r\n     * @param roomid\r\n     * @param wxids\r\n     * @returns int32 1 为成功，其他失败\r\n     */\r\n    delChatRoomMembers(roomid: string, wxids: string[]): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_DEL_ROOM_MEMBERS,\r\n            m: new wcf.MemberMgmt({\r\n                roomid,\r\n                wxids: wxids.join(',').replaceAll(' ', ''),\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 撤回消息\r\n     * @param msgid (uint64 in string format): 消息 id\r\n     * @returns int: 1 为成功，其他失败\r\n     */\r\n    revokeMsg(msgid: string): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_REVOKE_MSG,\r\n            ui64: msgid,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 转发消息。可以转发文本、图片、表情、甚至各种 XML；语音也行，不过效果嘛，自己验证吧。\r\n     * @param msgid (uint64 in string format): 消息 id\r\n     * @param receiver string 消息接收人，wxid 或者 roomid\r\n     * @returns int: 1 为成功，其他失败\r\n     */\r\n    forwardMsg(msgid: string, receiver: string): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_FORWARD_MSG,\r\n            fm: new wcf.ForwardMsg({\r\n                id: msgid,\r\n                receiver,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 发送文本消息\r\n     * @param msg 要发送的消息，换行使用 `\\n` （单杠）；如果 @ 人的话，需要带上跟 `aters` 里数量相同的 @\r\n     * @param receiver 消息接收人，wxid 或者 roomid\r\n     * @param aters 要 @ 的 wxid，多个用逗号分隔；`@所有人` 只需要 `notify@all`\r\n     * @returns 0 为成功，其他失败\r\n     */\r\n    sendTxt(msg: string, receiver: string, aters?: string): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_TXT,\r\n            txt: new wcf.TextMsg({\r\n                msg,\r\n                receiver,\r\n                aters,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * @param image location of the resource, can be:\r\n     * - a local path (`C:\\\\Users` or `/home/user`),\r\n     * - a link starts with `http(s)://`,\r\n     * - a buffer (base64 string can be convert to buffer by `Buffer.from(<str>, 'base64')`)\r\n     * - an object { type: 'Buffer', data: number[] } which can convert to Buffer\r\n     * - a FileSavableInterface instance\r\n     * @param receiver 消息接收人，wxid 或者 roomid\r\n     * @returns 0 为成功，其他失败\r\n     */\r\n    async sendImage(\r\n        image:\r\n            | string\r\n            | Buffer\r\n            | { type: 'Buffer'; data: number[] }\r\n            | FileSavableInterface,\r\n        receiver: string\r\n    ): Promise<number> {\r\n        const fileRef = toRef(image);\r\n        const { path, discard } = await fileRef.save(this.options.cacheDir);\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_IMG,\r\n            file: new wcf.PathMsg({\r\n                path,\r\n                receiver,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        void discard();\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * @param file location of the resource, can be:\r\n     * - a local path (`C:\\\\Users` or `/home/user`),\r\n     * - a link starts with `http(s)://`,\r\n     * - a buffer (base64 string can be convert to buffer by `Buffer.from(<str>, 'base64')`)\r\n     * - an object { type: 'Buffer', data: number[] } which can convert to Buffer\r\n     * - a FileSavableInterface instance\r\n     * @param receiver 消息接收人，wxid 或者 roomid\r\n     * @returns 0 为成功，其他失败\r\n     */\r\n    async sendFile(\r\n        file:\r\n            | string\r\n            | Buffer\r\n            | { type: 'Buffer'; data: number[] }\r\n            | FileSavableInterface,\r\n        receiver: string\r\n    ): Promise<number> {\r\n        const fileRef = toRef(file);\r\n        const { path, discard } = await fileRef.save(this.options.cacheDir);\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_FILE,\r\n            file: new wcf.PathMsg({\r\n                path,\r\n                receiver,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        void discard();\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Not supported\r\n     * 发送XML\r\n     * @param xml.content xml 内容\r\n     * @param xml.path 封面图片路径\r\n     * @param receiver xml 类型，如：0x21 为小程序\r\n     * @returns 0 为成功，其他失败\r\n     */\r\n    sendXML(\r\n        xml: { content: string; path?: string; type: number },\r\n        receiver: string\r\n    ): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_XML,\r\n            xml: new wcf.XmlMsg({\r\n                receiver,\r\n                content: xml.content,\r\n                type: xml.type,\r\n                path: xml.path,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Not supported\r\n     * 发送表情\r\n     * @param path 本地表情路径，如：`C:/Projs/WeChatRobot/emo.gif`\r\n     * @param receiver 消息接收人，wxid 或者 roomid\r\n     * @returns 0 为成功，其他失败\r\n     */\r\n    sendEmotion(path: string, receiver: string): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_EMOTION,\r\n            file: new wcf.PathMsg({\r\n                path,\r\n                receiver,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 发送富文本消息\r\n     *  卡片样式：\r\n     *       |-------------------------------------|\r\n     *       |title, 最长两行\r\n     *       |(长标题, 标题短的话这行没有)\r\n     *       |digest, 最多三行，会占位    |--------|\r\n     *       |digest, 最多三行，会占位    |thumburl|\r\n     *       |digest, 最多三行，会占位    |--------|\r\n     *       |(account logo) name\r\n     *       |-------------------------------------|\r\n     * @param desc.name 左下显示的名字\r\n     * @param desc.account 填公众号 id 可以显示对应的头像（gh_ 开头的）\r\n     * @param desc.title 标题，最多两行\r\n     * @param desc.digest 摘要，三行\r\n     * @param desc.url 点击后跳转的链接\r\n     * @param desc.thumburl 缩略图的链接\r\n     * @param receiver 接收人, wxid 或者 roomid\r\n     * @returns 0 为成功，其他失败\r\n     */\r\n    sendRichText(\r\n        desc: Omit<ReturnType<wcf.RichText['toObject']>, 'receiver'>,\r\n        receiver: string\r\n    ): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_RICH_TXT,\r\n            rt: new wcf.RichText({\r\n                ...desc,\r\n                receiver,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 拍一拍群友\r\n     * @param roomid 群 id\r\n     * @param wxid 要拍的群友的 wxid\r\n     * @returns 1 为成功，其他失败\r\n     */\r\n    sendPat(roomid: string, wxid: string): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_SEND_PAT_MSG,\r\n            pm: new wcf.PatMsg({\r\n                roomid,\r\n                wxid,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 获取语音消息并转成 MP3\r\n     * @param msgid 语音消息 id\r\n     * @param dir MP3 保存目录（目录不存在会出错）\r\n     * @param times 超时时间（秒）\r\n     * @returns 成功返回存储路径；空字符串为失败，原因见日志。\r\n     */\r\n    async getAudioMsg(msgid: string, dir: string, times = 3): Promise<string> {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_GET_AUDIO_MSG,\r\n            am: new wcf.AudioMsg({\r\n                id: msgid,\r\n                dir,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        if (rsp.str) {\r\n            return rsp.str;\r\n        }\r\n        if (times > 0) {\r\n            await sleep();\r\n            return this.getAudioMsg(msgid, dir, times - 1);\r\n        }\r\n        throw new Error('Timeout: get audio msg');\r\n    }\r\n\r\n    /**\r\n     * 获取 OCR 结果。鸡肋，需要图片能自动下载；通过下载接口下载的图片无法识别。\r\n     * @param extra 待识别的图片路径，消息里的 extra\r\n     * @param times OCR 结果\r\n     * @returns\r\n     */\r\n    async getOCRResult(extra: string, times = 2): Promise<string> {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_EXEC_OCR,\r\n            str: extra,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        if (rsp.ocr.status === 0 && rsp.ocr.result) {\r\n            return rsp.ocr.result;\r\n        }\r\n\r\n        if (times > 0) {\r\n            await sleep();\r\n            return this.getOCRResult(extra, times - 1);\r\n        }\r\n        throw new Error('Timeout: get ocr result');\r\n    }\r\n\r\n    /**\r\n     * @deprecated 下载附件（图片、视频、文件）。这方法别直接调用，下载图片使用 `download_image`\r\n     * @param msgid 消息中 id\r\n     * @param thumb 消息中的 thumb\r\n     * @param extra 消息中的 extra\r\n     * @returns 0 为成功, 其他失败。\r\n     */\r\n    downloadAttach(\r\n        msgid: string,\r\n        thumb: string = '',\r\n        extra: string = ''\r\n    ): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_DOWNLOAD_ATTACH,\r\n            att: new wcf.AttachMsg({\r\n                id: msgid,\r\n                thumb,\r\n                extra,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    // TODO: get correct wechat files directory somewhere?\r\n    private readonly UserDir = path.join(\r\n        os.homedir(),\r\n        'Documents',\r\n        'WeChat Files'\r\n    );\r\n\r\n    private getMsgAttachments(msgid: string): {\r\n        extra?: string;\r\n        thumb?: string;\r\n    } {\r\n        const messages = this.dbSqlQuery(\r\n            'MSG0.db',\r\n            `Select * from MSG WHERE MsgSvrID = \"${msgid}\"`\r\n        );\r\n        const buf = messages?.[0]?.['BytesExtra'];\r\n        if (!Buffer.isBuffer(buf)) {\r\n            return {};\r\n        }\r\n        const extraData = eb.com.iamteer.wcf.Extra.deserialize(buf);\r\n        const { properties } = extraData.toObject();\r\n        if (!properties) {\r\n            return {};\r\n        }\r\n        const propertyMap: Partial<\r\n            Record<eb.com.iamteer.wcf.Extra.PropertyKey, string>\r\n        > = Object.fromEntries(properties.map((p) => [p.type, p.value]));\r\n        const extra = propertyMap[eb.com.iamteer.wcf.Extra.PropertyKey.Extra];\r\n        const thumb = propertyMap[eb.com.iamteer.wcf.Extra.PropertyKey.Thumb];\r\n\r\n        return {\r\n            extra: extra ? path.resolve(this.UserDir, extra) : '',\r\n            thumb: thumb ? path.resolve(this.UserDir, thumb) : '',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @deprecated 解密图片。这方法别直接调用，下载图片使用 `download_image`。\r\n     * @param src 加密的图片路径\r\n     * @param dir 保存图片的目录\r\n     * @returns\r\n     */\r\n    decryptImage(src: string, dir: string): string {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_DECRYPT_IMAGE,\r\n            dec: new wcf.DecPath({\r\n                src,\r\n                dst: dir,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.str;\r\n    }\r\n\r\n    /**\r\n     * 下载图片\r\n     * @param msgid 消息中 id\r\n     * @param dir 存放图片的目录（目录不存在会出错）\r\n     * @param extra 消息中的 extra, 如果为空，自动通过msgid获取\r\n     * @param times 超时时间（秒）\r\n     * @returns 成功返回存储路径；空字符串为失败，原因见日志。\r\n     */\r\n    async downloadImage(\r\n        msgid: string,\r\n        dir: string,\r\n        extra?: string,\r\n        thumb?: string,\r\n        times = 30\r\n    ): Promise<string> {\r\n        const msgAttachments = extra\r\n            ? { extra, thumb }\r\n            : this.getMsgAttachments(msgid);\r\n        if (\r\n            this.downloadAttach(\r\n                msgid,\r\n                msgAttachments.thumb,\r\n                msgAttachments.extra\r\n            ) !== 0\r\n        ) {\r\n            return Promise.reject('Failed to download attach');\r\n        }\r\n        for (let cnt = 0; cnt < times; cnt++) {\r\n            const path = this.decryptImage(msgAttachments.extra || '', dir);\r\n            if (path) {\r\n                return path;\r\n            }\r\n            await sleep();\r\n        }\r\n        return Promise.reject('Failed to decrypt image');\r\n    }\r\n\r\n    /**\r\n     * 通过好友申请\r\n     * @param v3 加密用户名 (好友申请消息里 v3 开头的字符串)\r\n     * @param v4 Ticket (好友申请消息里 v4 开头的字符串)\r\n     * @param scene 申请方式 (好友申请消息里的 scene); 为了兼容旧接口，默认为扫码添加 (30)\r\n     * @returns 1 为成功，其他失败\r\n     */\r\n    acceptNewFriend(v3: string, v4: string, scene = 30): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_ACCEPT_FRIEND,\r\n            v: new wcf.Verification({\r\n                v3,\r\n                v4,\r\n                scene,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * 接收转账\r\n     * @param wxid 转账消息里的发送人 wxid\r\n     * @param transferid 转账消息里的 transferid\r\n     * @param transactionid 转账消息里的 transactionid\r\n     * @returns 1 为成功，其他失败\r\n     */\r\n    receiveTransfer(\r\n        wxid: string,\r\n        transferid: string,\r\n        transactionid: string\r\n    ): number {\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_RECV_TRANSFER,\r\n            tf: new wcf.Transfer({\r\n                wxid,\r\n                tfid: transferid,\r\n                taid: transactionid,\r\n            }),\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        return rsp.status;\r\n    }\r\n\r\n    /**\r\n     * @internal 允许接收消息,自动根据on(...)注册的listener调用\r\n     * @param pyq\r\n     * @returns\r\n     */\r\n    private enableMsgReceiving(): boolean {\r\n        if (this.isMsgReceiving) {\r\n            return true;\r\n        }\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_ENABLE_RECV_TXT,\r\n            flag: this.options.recvPyq,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        if (rsp.status !== 0) {\r\n            this.isMsgReceiving = false;\r\n            return false;\r\n        }\r\n        try {\r\n            this.msgDispose = this.receiveMessage();\r\n            this.isMsgReceiving = true;\r\n            return true;\r\n        } catch (err) {\r\n            this.msgDispose?.();\r\n            this.isMsgReceiving = false;\r\n            logger('enable message receiving error: %O', err);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal 停止接收消息,自动根据on(...)注册/注销的listener 调用\r\n     * @param force\r\n     * @returns\r\n     */\r\n    private disableMsgReceiving(force = false): number {\r\n        if (!force && !this.isMsgReceiving) {\r\n            return 0;\r\n        }\r\n        const req = new wcf.Request({\r\n            func: wcf.Functions.FUNC_DISABLE_RECV_TXT,\r\n        });\r\n        const rsp = this.sendRequest(req);\r\n        this.isMsgReceiving = false;\r\n        this.msgDispose?.();\r\n        this.msgDispose = undefined;\r\n        return rsp.status;\r\n    }\r\n\r\n    private receiveMessage() {\r\n        const disposable = Socket.recvMessage(\r\n            this.createUrl('msg'),\r\n            null,\r\n            this.messageCallback.bind(this)\r\n        );\r\n        return () => disposable.dispose();\r\n    }\r\n\r\n    private messageCallback(err: unknown | undefined, buf: Buffer) {\r\n        if (err) {\r\n            logger('error while receiving message: %O', err);\r\n            return;\r\n        }\r\n        const rsp = wcf.Response.deserialize(buf);\r\n        this.msgEventSub.emit('wxmsg', new Message(rsp.wxmsg));\r\n    }\r\n\r\n    /**\r\n     * 注册消息回调监听函数(listener), 通过call返回的函数注销\r\n     * 当注册的监听函数数量大于0是自动调用enableMsgReceiving,否则自动调用disableMsgReceiving\r\n     * 设置wcferry.recvPyq = true/false 来开启关闭接受朋友圈消息\r\n     * @param callback 监听函数\r\n     * @returns 注销监听函数\r\n     */\r\n    on(callback: (msg: Message) => void): () => void {\r\n        this.msgEventSub.on('wxmsg', callback);\r\n        if (this.connected && this.msgEventSub.listenerCount('wxmsg') === 1) {\r\n            this.enableMsgReceiving();\r\n        }\r\n        return () => {\r\n            if (\r\n                this.connected &&\r\n                this.msgEventSub.listenerCount('wxmsg') === 1\r\n            ) {\r\n                this.disableMsgReceiving();\r\n            }\r\n            this.msgEventSub.off('wxmsg', callback);\r\n        };\r\n    }\r\n}\r\n\r\nfunction toRef(\r\n    file:\r\n        | string\r\n        | Buffer\r\n        | { type: 'Buffer'; data: number[] }\r\n        | FileSavableInterface\r\n): FileSavableInterface {\r\n    if (typeof file === 'string' || Buffer.isBuffer(file)) {\r\n        return new FileRef(file);\r\n    }\r\n    if ('save' in file) {\r\n        return file;\r\n    }\r\n    return new FileRef(Buffer.from(file.data));\r\n}\r\n\r\nfunction parseDbField(type: number, content: Uint8Array) {\r\n    // self._SQL_TYPES = {1: int, 2: float, 3: lambda x: x.decode(\"utf-8\"), 4: bytes, 5: lambda x: None}\r\n    switch (type) {\r\n        case 1:\r\n            return Number.parseInt(uint8Array2str(content), 10);\r\n        case 2:\r\n            return Number.parseFloat(uint8Array2str(content));\r\n        case 3:\r\n        default:\r\n            return uint8Array2str(content);\r\n        case 4:\r\n            return Buffer.from(content);\r\n        case 5:\r\n            return undefined;\r\n    }\r\n}\r\n"],"names":["Wcferry","logger","debug","trapOnExit","process","on","stop","connected","socket","msgReceiving","isMsgReceiving","createUrl","channel","url","options","host","port","recvPyq","pyq","disableMsgReceiving","enableMsgReceiving","msgListenerCount","msgEventSub","listenerCount","start","execDLL","connect","err","verb","localMode","scriptPath","path","resolve","__dirname","cp","spawnSync","shell","stdio","error","status","Error","close","sendRequest","req","data","serialize","buf","send","Buffer","from","res","wcf","Response","deserialize","isLogin","Request","func","Functions","FUNC_IS_LOGIN","rsp","getSelfWxid","FUNC_GET_SELF_WXID","str","getUserInfo","FUNC_GET_USER_INFO","ui","getContacts","FUNC_GET_CONTACTS","contacts","map","c","toObject","getContact","wxid","FUNC_GET_CONTACT_INFO","getDbNames","FUNC_GET_DB_NAMES","dbs","names","getDbTables","db","FUNC_GET_DB_TABLES","tables","t","dbSqlQuery","sql","FUNC_EXEC_DB_QUERY","query","DbQuery","rows","r","Object","fromEntries","fields","f","column","parseDbField","type","content","getMsgTypes","FUNC_GET_MSG_TYPES","types","refreshPyq","id","FUNC_REFRESH_PYQ","ui64","getChatRooms","filter","endsWith","getFriends","startsWith","hasOwn","NotFriend","getChatRoomMembers","roomid","times","room","sleep","rd","com","iamteer","RoomData","userRds","userDict","u","members","member","name","getAliasInChatRoom","roomData","undefined","find","m","getNickName","wxids","join","row","inviteChatroomMembers","FUNC_INV_ROOM_MEMBERS","MemberMgmt","replaceAll","addChatRoomMembers","FUNC_ADD_ROOM_MEMBERS","delChatRoomMembers","FUNC_DEL_ROOM_MEMBERS","revokeMsg","msgid","FUNC_REVOKE_MSG","forwardMsg","receiver","FUNC_FORWARD_MSG","fm","ForwardMsg","sendTxt","msg","aters","FUNC_SEND_TXT","txt","TextMsg","sendImage","image","fileRef","toRef","discard","save","cacheDir","FUNC_SEND_IMG","file","PathMsg","sendFile","FUNC_SEND_FILE","sendXML","xml","FUNC_SEND_XML","XmlMsg","sendEmotion","FUNC_SEND_EMOTION","sendRichText","desc","FUNC_SEND_RICH_TXT","rt","RichText","sendPat","FUNC_SEND_PAT_MSG","pm","PatMsg","getAudioMsg","dir","FUNC_GET_AUDIO_MSG","am","AudioMsg","getOCRResult","extra","FUNC_EXEC_OCR","ocr","result","downloadAttach","thumb","FUNC_DOWNLOAD_ATTACH","att","AttachMsg","getMsgAttachments","messages","isBuffer","extraData","eb","Extra","properties","propertyMap","p","value","PropertyKey","Thumb","UserDir","decryptImage","src","FUNC_DECRYPT_IMAGE","dec","DecPath","dst","downloadImage","msgAttachments","Promise","reject","cnt","acceptNewFriend","v3","v4","scene","FUNC_ACCEPT_FRIEND","v","Verification","receiveTransfer","transferid","transactionid","FUNC_RECV_TRANSFER","tf","Transfer","tfid","taid","FUNC_ENABLE_RECV_TXT","flag","msgDispose","receiveMessage","force","FUNC_DISABLE_RECV_TXT","disposable","Socket","recvMessage","messageCallback","bind","dispose","emit","Message","wxmsg","callback","off","constructor","fmessage","medianote","floatbottle","filehelper","newsapp","EventEmitter","os","homedir","socketOptions","createTmpDir","ensureDirSync","setMaxListeners","FileRef","Number","parseInt","uint8Array2str","parseFloat"],"mappings":"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"}