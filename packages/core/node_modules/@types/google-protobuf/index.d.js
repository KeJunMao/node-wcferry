"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    BinaryConstants: function() {
        return BinaryConstants;
    },
    BinaryDecoder: function() {
        return BinaryDecoder;
    },
    BinaryEncoder: function() {
        return BinaryEncoder;
    },
    BinaryIterator: function() {
        return BinaryIterator;
    },
    BinaryReader: function() {
        return BinaryReader;
    },
    BinaryWriter: function() {
        return BinaryWriter;
    },
    ExtensionFieldBinaryInfo: function() {
        return ExtensionFieldBinaryInfo;
    },
    ExtensionFieldInfo: function() {
        return ExtensionFieldInfo;
    },
    Map: function() {
        return Map;
    },
    Message: function() {
        return Message;
    },
    arith: function() {
        return arith;
    }
});
let Message = class Message {
};
let ExtensionFieldInfo = class ExtensionFieldInfo {
};
let ExtensionFieldBinaryInfo = class ExtensionFieldBinaryInfo {
};
let Map = class Map {
};
let BinaryReader = class BinaryReader {
};
let BinaryWriter = class BinaryWriter {
};
let BinaryEncoder = class BinaryEncoder {
};
let BinaryDecoder = class BinaryDecoder {
};
let BinaryIterator = class BinaryIterator {
};
var BinaryConstants;
(function(BinaryConstants) {
    let FieldType;
    (function(FieldType) {
        FieldType[FieldType["INVALID"] = -1] = "INVALID";
        FieldType[FieldType["DOUBLE"] = 1] = "DOUBLE";
        FieldType[FieldType["FLOAT"] = 2] = "FLOAT";
        FieldType[FieldType["INT64"] = 3] = "INT64";
        FieldType[FieldType["UINT64"] = 4] = "UINT64";
        FieldType[FieldType["INT32"] = 5] = "INT32";
        FieldType[FieldType["FIXED64"] = 6] = "FIXED64";
        FieldType[FieldType["FIXED32"] = 7] = "FIXED32";
        FieldType[FieldType["BOOL"] = 8] = "BOOL";
        FieldType[FieldType["STRING"] = 9] = "STRING";
        FieldType[FieldType["GROUP"] = 10] = "GROUP";
        FieldType[FieldType["MESSAGE"] = 11] = "MESSAGE";
        FieldType[FieldType["BYTES"] = 12] = "BYTES";
        FieldType[FieldType["UINT32"] = 13] = "UINT32";
        FieldType[FieldType["ENUM"] = 14] = "ENUM";
        FieldType[FieldType["SFIXED32"] = 15] = "SFIXED32";
        FieldType[FieldType["SFIXED64"] = 16] = "SFIXED64";
        FieldType[FieldType["SINT32"] = 17] = "SINT32";
        FieldType[FieldType["SINT64"] = 18] = "SINT64";
        FieldType[FieldType["FHASH64"] = 30] = "FHASH64";
        FieldType[FieldType["VHASH64"] = 31] = "VHASH64";
    })(FieldType || (FieldType = {}));
    let WireType;
    (function(WireType) {
        WireType[WireType["INVALID"] = -1] = "INVALID";
        WireType[WireType["VARINT"] = 0] = "VARINT";
        WireType[WireType["FIXED64"] = 1] = "FIXED64";
        WireType[WireType["DELIMITED"] = 2] = "DELIMITED";
        WireType[WireType["START_GROUP"] = 3] = "START_GROUP";
        WireType[WireType["END_GROUP"] = 4] = "END_GROUP";
        WireType[WireType["FIXED32"] = 5] = "FIXED32";
    })(WireType || (WireType = {}));
    const FieldTypeToWireType;
    const INVALID_FIELD_NUMBER;
    const FLOAT32_EPS;
    const FLOAT32_MIN;
    const FLOAT32_MAX;
    const FLOAT64_EPS;
    const FLOAT64_MIN;
    const FLOAT64_MAX;
    const TWO_TO_20;
    const TWO_TO_23;
    const TWO_TO_31;
    const TWO_TO_32;
    const TWO_TO_52;
    const TWO_TO_63;
    const TWO_TO_64;
    const ZERO_HASH;
})(BinaryConstants || (BinaryConstants = {}));
var arith;
(function(arith) {
    let UInt64 = class UInt64 {
    };
    let Int64 = class Int64 {
    };
})(arith || (arith = {})); // jspb.utils package excluded as it likely shouldn't be called by user code

//# sourceMappingURL=index.d.js.map