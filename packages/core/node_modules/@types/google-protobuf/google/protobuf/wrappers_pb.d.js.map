{"version":3,"sources":["../../../../../../../../packages/core/node_modules/@types/google-protobuf/google/protobuf/wrappers_pb.d.ts"],"sourcesContent":["// package: google.protobuf\n// file: wrappers.proto\n\nimport * as jspb from \"../../index\";\n\nexport class DoubleValue extends jspb.Message {\n    getValue(): number;\n    setValue(value: number): DoubleValue;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): DoubleValue.AsObject;\n    static toObject(includeInstance: boolean, msg: DoubleValue): DoubleValue.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: DoubleValue, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): DoubleValue;\n    static deserializeBinaryFromReader(message: DoubleValue, reader: jspb.BinaryReader): DoubleValue;\n}\n\nexport namespace DoubleValue {\n    export type AsObject = {\n        value: number;\n    };\n}\n\nexport class FloatValue extends jspb.Message {\n    getValue(): number;\n    setValue(value: number): FloatValue;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): FloatValue.AsObject;\n    static toObject(includeInstance: boolean, msg: FloatValue): FloatValue.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: FloatValue, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): FloatValue;\n    static deserializeBinaryFromReader(message: FloatValue, reader: jspb.BinaryReader): FloatValue;\n}\n\nexport namespace FloatValue {\n    export type AsObject = {\n        value: number;\n    };\n}\n\nexport class Int64Value extends jspb.Message {\n    getValue(): number;\n    setValue(value: number): Int64Value;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Int64Value.AsObject;\n    static toObject(includeInstance: boolean, msg: Int64Value): Int64Value.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Int64Value, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Int64Value;\n    static deserializeBinaryFromReader(message: Int64Value, reader: jspb.BinaryReader): Int64Value;\n}\n\nexport namespace Int64Value {\n    export type AsObject = {\n        value: number;\n    };\n}\n\nexport class UInt64Value extends jspb.Message {\n    getValue(): number;\n    setValue(value: number): UInt64Value;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): UInt64Value.AsObject;\n    static toObject(includeInstance: boolean, msg: UInt64Value): UInt64Value.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: UInt64Value, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): UInt64Value;\n    static deserializeBinaryFromReader(message: UInt64Value, reader: jspb.BinaryReader): UInt64Value;\n}\n\nexport namespace UInt64Value {\n    export type AsObject = {\n        value: number;\n    };\n}\n\nexport class Int32Value extends jspb.Message {\n    getValue(): number;\n    setValue(value: number): Int32Value;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Int32Value.AsObject;\n    static toObject(includeInstance: boolean, msg: Int32Value): Int32Value.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Int32Value, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Int32Value;\n    static deserializeBinaryFromReader(message: Int32Value, reader: jspb.BinaryReader): Int32Value;\n}\n\nexport namespace Int32Value {\n    export type AsObject = {\n        value: number;\n    };\n}\n\nexport class UInt32Value extends jspb.Message {\n    getValue(): number;\n    setValue(value: number): UInt32Value;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): UInt32Value.AsObject;\n    static toObject(includeInstance: boolean, msg: UInt32Value): UInt32Value.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: UInt32Value, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): UInt32Value;\n    static deserializeBinaryFromReader(message: UInt32Value, reader: jspb.BinaryReader): UInt32Value;\n}\n\nexport namespace UInt32Value {\n    export type AsObject = {\n        value: number;\n    };\n}\n\nexport class BoolValue extends jspb.Message {\n    getValue(): boolean;\n    setValue(value: boolean): BoolValue;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): BoolValue.AsObject;\n    static toObject(includeInstance: boolean, msg: BoolValue): BoolValue.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: BoolValue, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): BoolValue;\n    static deserializeBinaryFromReader(message: BoolValue, reader: jspb.BinaryReader): BoolValue;\n}\n\nexport namespace BoolValue {\n    export type AsObject = {\n        value: boolean;\n    };\n}\n\nexport class StringValue extends jspb.Message {\n    getValue(): string;\n    setValue(value: string): StringValue;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): StringValue.AsObject;\n    static toObject(includeInstance: boolean, msg: StringValue): StringValue.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: StringValue, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): StringValue;\n    static deserializeBinaryFromReader(message: StringValue, reader: jspb.BinaryReader): StringValue;\n}\n\nexport namespace StringValue {\n    export type AsObject = {\n        value: string;\n    };\n}\n\nexport class BytesValue extends jspb.Message {\n    getValue(): Uint8Array | string;\n    getValue_asU8(): Uint8Array;\n    getValue_asB64(): string;\n    setValue(value: Uint8Array | string): BytesValue;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): BytesValue.AsObject;\n    static toObject(includeInstance: boolean, msg: BytesValue): BytesValue.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: BytesValue, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): BytesValue;\n    static deserializeBinaryFromReader(message: BytesValue, reader: jspb.BinaryReader): BytesValue;\n}\n\nexport namespace BytesValue {\n    export type AsObject = {\n        value: Uint8Array | string;\n    };\n}\n"],"names":["BoolValue","BytesValue","DoubleValue","FloatValue","Int32Value","Int64Value","StringValue","UInt32Value","UInt64Value","jspb","Message"],"mappings":"AAAA,2BAA2B;AAC3B,uBAAuB;;;;;;;;;;;;IA4HVA,SAAS;eAATA;;IAwCAC,UAAU;eAAVA;;IAhKAC,WAAW;eAAXA;;IAoBAC,UAAU;eAAVA;;IA4DAC,UAAU;eAAVA;;IAxCAC,UAAU;eAAVA;;IAoGAC,WAAW;eAAXA;;IAxCAC,WAAW;eAAXA;;IAxCAC,WAAW;eAAXA;;;;iEA9DS;AAEf,IAAA,AAAMN,cAAN,MAAMA,oBAAoBO,OAAKC,OAAO;AAY7C;AAQO,IAAA,AAAMP,aAAN,MAAMA,mBAAmBM,OAAKC,OAAO;AAY5C;AAQO,IAAA,AAAML,aAAN,MAAMA,mBAAmBI,OAAKC,OAAO;AAY5C;AAQO,IAAA,AAAMF,cAAN,MAAMA,oBAAoBC,OAAKC,OAAO;AAY7C;AAQO,IAAA,AAAMN,aAAN,MAAMA,mBAAmBK,OAAKC,OAAO;AAY5C;AAQO,IAAA,AAAMH,cAAN,MAAMA,oBAAoBE,OAAKC,OAAO;AAY7C;AAQO,IAAA,AAAMV,YAAN,MAAMA,kBAAkBS,OAAKC,OAAO;AAY3C;AAQO,IAAA,AAAMJ,cAAN,MAAMA,oBAAoBG,OAAKC,OAAO;AAY7C;AAQO,IAAA,AAAMT,aAAN,MAAMA,mBAAmBQ,OAAKC,OAAO;AAc5C"}