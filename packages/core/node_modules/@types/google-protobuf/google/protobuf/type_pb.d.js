// package: google.protobuf
// file: type.proto
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Enum: function() {
        return Enum;
    },
    EnumValue: function() {
        return EnumValue;
    },
    Field: function() {
        return Field;
    },
    Option: function() {
        return Option;
    },
    Syntax: function() {
        return Syntax;
    },
    Type: function() {
        return Type;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _index = /*#__PURE__*/ _interop_require_wildcard._(require("../../index"));
let Type = class Type extends _index.Message {
};
let Field = class Field extends _index.Message {
};
(function(Field) {
    let Kind;
    (function(Kind) {
        Kind[Kind["TYPE_UNKNOWN"] = 0] = "TYPE_UNKNOWN";
        Kind[Kind["TYPE_DOUBLE"] = 1] = "TYPE_DOUBLE";
        Kind[Kind["TYPE_FLOAT"] = 2] = "TYPE_FLOAT";
        Kind[Kind["TYPE_INT64"] = 3] = "TYPE_INT64";
        Kind[Kind["TYPE_UINT64"] = 4] = "TYPE_UINT64";
        Kind[Kind["TYPE_INT32"] = 5] = "TYPE_INT32";
        Kind[Kind["TYPE_FIXED64"] = 6] = "TYPE_FIXED64";
        Kind[Kind["TYPE_FIXED32"] = 7] = "TYPE_FIXED32";
        Kind[Kind["TYPE_BOOL"] = 8] = "TYPE_BOOL";
        Kind[Kind["TYPE_STRING"] = 9] = "TYPE_STRING";
        Kind[Kind["TYPE_GROUP"] = 10] = "TYPE_GROUP";
        Kind[Kind["TYPE_MESSAGE"] = 11] = "TYPE_MESSAGE";
        Kind[Kind["TYPE_BYTES"] = 12] = "TYPE_BYTES";
        Kind[Kind["TYPE_UINT32"] = 13] = "TYPE_UINT32";
        Kind[Kind["TYPE_ENUM"] = 14] = "TYPE_ENUM";
        Kind[Kind["TYPE_SFIXED32"] = 15] = "TYPE_SFIXED32";
        Kind[Kind["TYPE_SFIXED64"] = 16] = "TYPE_SFIXED64";
        Kind[Kind["TYPE_SINT32"] = 17] = "TYPE_SINT32";
        Kind[Kind["TYPE_SINT64"] = 18] = "TYPE_SINT64";
    })(Kind = Field.Kind || (Field.Kind = {}));
    let Cardinality;
    (function(Cardinality) {
        Cardinality[Cardinality["CARDINALITY_UNKNOWN"] = 0] = "CARDINALITY_UNKNOWN";
        Cardinality[Cardinality["CARDINALITY_OPTIONAL"] = 1] = "CARDINALITY_OPTIONAL";
        Cardinality[Cardinality["CARDINALITY_REQUIRED"] = 2] = "CARDINALITY_REQUIRED";
        Cardinality[Cardinality["CARDINALITY_REPEATED"] = 3] = "CARDINALITY_REPEATED";
    })(Cardinality = Field.Cardinality || (Field.Cardinality = {}));
})(Field || (Field = {}));
let Enum = class Enum extends _index.Message {
};
let EnumValue = class EnumValue extends _index.Message {
};
let Option = class Option extends _index.Message {
};
var Syntax;
(function(Syntax) {
    Syntax[Syntax["SYNTAX_PROTO2"] = 0] = "SYNTAX_PROTO2";
    Syntax[Syntax["SYNTAX_PROTO3"] = 1] = "SYNTAX_PROTO3";
})(Syntax || (Syntax = {}));

//# sourceMappingURL=type_pb.d.js.map