{"version":3,"sources":["../../../../../../../../packages/core/node_modules/@types/google-protobuf/google/protobuf/api_pb.d.ts"],"sourcesContent":["// package: google.protobuf\n// file: api.proto\n\nimport * as jspb from \"../../index\";\nimport * as google_protobuf_source_context_pb from \"./source_context_pb\";\nimport * as google_protobuf_type_pb from \"./type_pb\";\n\nexport class Api extends jspb.Message {\n    getName(): string;\n    setName(value: string): Api;\n\n    clearMethodsList(): Api;\n    getMethodsList(): Method[];\n    setMethodsList(value: Method[]): Api;\n    addMethods(value?: Method, index?: number): Method;\n\n    clearOptionsList(): Api;\n    getOptionsList(): google_protobuf_type_pb.Option[];\n    setOptionsList(value: google_protobuf_type_pb.Option[]): Api;\n    addOptions(value?: google_protobuf_type_pb.Option, index?: number): google_protobuf_type_pb.Option;\n\n    getVersion(): string;\n    setVersion(value: string): Api;\n\n    hasSourceContext(): boolean;\n    clearSourceContext(): Api;\n    getSourceContext(): google_protobuf_source_context_pb.SourceContext | undefined;\n    setSourceContext(value?: google_protobuf_source_context_pb.SourceContext): Api;\n\n    clearMixinsList(): Api;\n    getMixinsList(): Mixin[];\n    setMixinsList(value: Mixin[]): Api;\n    addMixins(value?: Mixin, index?: number): Mixin;\n\n    getSyntax(): google_protobuf_type_pb.Syntax;\n    setSyntax(value: google_protobuf_type_pb.Syntax): Api;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Api.AsObject;\n    static toObject(includeInstance: boolean, msg: Api): Api.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Api, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Api;\n    static deserializeBinaryFromReader(message: Api, reader: jspb.BinaryReader): Api;\n}\n\nexport namespace Api {\n    export type AsObject = {\n        name: string;\n        methodsList: Method.AsObject[];\n        optionsList: google_protobuf_type_pb.Option.AsObject[];\n        version: string;\n        sourceContext?: google_protobuf_source_context_pb.SourceContext.AsObject | undefined;\n        mixinsList: Mixin.AsObject[];\n        syntax: google_protobuf_type_pb.Syntax;\n    };\n}\n\nexport class Method extends jspb.Message {\n    getName(): string;\n    setName(value: string): Method;\n\n    getRequestTypeUrl(): string;\n    setRequestTypeUrl(value: string): Method;\n\n    getRequestStreaming(): boolean;\n    setRequestStreaming(value: boolean): Method;\n\n    getResponseTypeUrl(): string;\n    setResponseTypeUrl(value: string): Method;\n\n    getResponseStreaming(): boolean;\n    setResponseStreaming(value: boolean): Method;\n\n    clearOptionsList(): Method;\n    getOptionsList(): google_protobuf_type_pb.Option[];\n    setOptionsList(value: google_protobuf_type_pb.Option[]): Method;\n    addOptions(value?: google_protobuf_type_pb.Option, index?: number): google_protobuf_type_pb.Option;\n\n    getSyntax(): google_protobuf_type_pb.Syntax;\n    setSyntax(value: google_protobuf_type_pb.Syntax): Method;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Method.AsObject;\n    static toObject(includeInstance: boolean, msg: Method): Method.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Method, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Method;\n    static deserializeBinaryFromReader(message: Method, reader: jspb.BinaryReader): Method;\n}\n\nexport namespace Method {\n    export type AsObject = {\n        name: string;\n        requestTypeUrl: string;\n        requestStreaming: boolean;\n        responseTypeUrl: string;\n        responseStreaming: boolean;\n        optionsList: google_protobuf_type_pb.Option.AsObject[];\n        syntax: google_protobuf_type_pb.Syntax;\n    };\n}\n\nexport class Mixin extends jspb.Message {\n    getName(): string;\n    setName(value: string): Mixin;\n\n    getRoot(): string;\n    setRoot(value: string): Mixin;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Mixin.AsObject;\n    static toObject(includeInstance: boolean, msg: Mixin): Mixin.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Mixin, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Mixin;\n    static deserializeBinaryFromReader(message: Mixin, reader: jspb.BinaryReader): Mixin;\n}\n\nexport namespace Mixin {\n    export type AsObject = {\n        name: string;\n        root: string;\n    };\n}\n"],"names":["Api","Method","Mixin","jspb","Message"],"mappings":"AAAA,2BAA2B;AAC3B,kBAAkB;;;;;;;;;;;;IAMLA,GAAG;eAAHA;;IAoDAC,MAAM;eAANA;;IA8CAC,KAAK;eAALA;;;;iEAtGS;AAIf,IAAA,AAAMF,MAAN,MAAMA,YAAYG,OAAKC,OAAO;AAsCrC;AAcO,IAAA,AAAMH,SAAN,MAAMA,eAAeE,OAAKC,OAAO;AAgCxC;AAcO,IAAA,AAAMF,QAAN,MAAMA,cAAcC,OAAKC,OAAO;AAevC"}