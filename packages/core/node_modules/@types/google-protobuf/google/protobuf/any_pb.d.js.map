{"version":3,"sources":["../../../../../../../../packages/core/node_modules/@types/google-protobuf/google/protobuf/any_pb.d.ts"],"sourcesContent":["// package: google.protobuf\n// file: any.proto\n\nimport * as jspb from \"../../index\";\n\nexport class Any extends jspb.Message {\n    getTypeUrl(): string;\n    setTypeUrl(value: string): Any;\n\n    getValue(): Uint8Array | string;\n    getValue_asU8(): Uint8Array;\n    getValue_asB64(): string;\n    setValue(value: Uint8Array | string): Any;\n\n    getTypeName(): string;\n    pack(serialized: Uint8Array, name: string, typeUrlPrefix?: string): void;\n    unpack<T extends jspb.Message>(deserialize: (packed: Uint8Array) => T, name: string): T | null;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Any.AsObject;\n    static toObject(includeInstance: boolean, msg: Any): Any.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Any, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Any;\n    static deserializeBinaryFromReader(message: Any, reader: jspb.BinaryReader): Any;\n}\n\nexport namespace Any {\n    export type AsObject = {\n        typeUrl: string;\n        value: Uint8Array | string;\n    };\n}\n"],"names":["Any","jspb","Message"],"mappings":"AAAA,2BAA2B;AAC3B,kBAAkB;;;;;+BAILA;;;eAAAA;;;;iEAFS;AAEf,IAAA,AAAMA,MAAN,MAAMA,YAAYC,OAAKC,OAAO;AAqBrC"}