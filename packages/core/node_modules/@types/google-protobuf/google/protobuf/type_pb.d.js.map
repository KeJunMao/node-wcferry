{"version":3,"sources":["../../../../../../../../packages/core/node_modules/@types/google-protobuf/google/protobuf/type_pb.d.ts"],"sourcesContent":["// package: google.protobuf\n// file: type.proto\n\nimport * as jspb from \"../../index\";\nimport * as google_protobuf_any_pb from \"./any_pb\";\nimport * as google_protobuf_source_context_pb from \"./source_context_pb\";\n\nexport class Type extends jspb.Message {\n    getName(): string;\n    setName(value: string): Type;\n\n    clearFieldsList(): Type;\n    getFieldsList(): Field[];\n    setFieldsList(value: Field[]): Type;\n    addFields(value?: Field, index?: number): Field;\n\n    clearOneofsList(): Type;\n    getOneofsList(): string[];\n    setOneofsList(value: string[]): Type;\n    addOneofs(value: string, index?: number): string;\n\n    clearOptionsList(): Type;\n    getOptionsList(): Option[];\n    setOptionsList(value: Option[]): Type;\n    addOptions(value?: Option, index?: number): Option;\n\n    hasSourceContext(): boolean;\n    clearSourceContext(): Type;\n    getSourceContext(): google_protobuf_source_context_pb.SourceContext | undefined;\n    setSourceContext(value?: google_protobuf_source_context_pb.SourceContext): Type;\n\n    getSyntax(): Syntax;\n    setSyntax(value: Syntax): Type;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Type.AsObject;\n    static toObject(includeInstance: boolean, msg: Type): Type.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Type, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Type;\n    static deserializeBinaryFromReader(message: Type, reader: jspb.BinaryReader): Type;\n}\n\nexport namespace Type {\n    export type AsObject = {\n        name: string;\n        fieldsList: Field.AsObject[];\n        oneofsList: string[];\n        optionsList: Option.AsObject[];\n        sourceContext?: google_protobuf_source_context_pb.SourceContext.AsObject | undefined;\n        syntax: Syntax;\n    };\n}\n\nexport class Field extends jspb.Message {\n    getKind(): Field.Kind;\n    setKind(value: Field.Kind): Field;\n\n    getCardinality(): Field.Cardinality;\n    setCardinality(value: Field.Cardinality): Field;\n\n    getNumber(): number;\n    setNumber(value: number): Field;\n\n    getName(): string;\n    setName(value: string): Field;\n\n    getTypeUrl(): string;\n    setTypeUrl(value: string): Field;\n\n    getOneofIndex(): number;\n    setOneofIndex(value: number): Field;\n\n    getPacked(): boolean;\n    setPacked(value: boolean): Field;\n\n    clearOptionsList(): Field;\n    getOptionsList(): Option[];\n    setOptionsList(value: Option[]): Field;\n    addOptions(value?: Option, index?: number): Option;\n\n    getJsonName(): string;\n    setJsonName(value: string): Field;\n\n    getDefaultValue(): string;\n    setDefaultValue(value: string): Field;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Field.AsObject;\n    static toObject(includeInstance: boolean, msg: Field): Field.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Field, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Field;\n    static deserializeBinaryFromReader(message: Field, reader: jspb.BinaryReader): Field;\n}\n\nexport namespace Field {\n    export type AsObject = {\n        kind: Kind;\n        cardinality: Cardinality;\n        number: number;\n        name: string;\n        typeUrl: string;\n        oneofIndex: number;\n        packed: boolean;\n        optionsList: Option.AsObject[];\n        jsonName: string;\n        defaultValue: string;\n    };\n\n    export enum Kind {\n        TYPE_UNKNOWN = 0,\n        TYPE_DOUBLE = 1,\n        TYPE_FLOAT = 2,\n        TYPE_INT64 = 3,\n        TYPE_UINT64 = 4,\n        TYPE_INT32 = 5,\n        TYPE_FIXED64 = 6,\n        TYPE_FIXED32 = 7,\n        TYPE_BOOL = 8,\n        TYPE_STRING = 9,\n        TYPE_GROUP = 10,\n        TYPE_MESSAGE = 11,\n        TYPE_BYTES = 12,\n        TYPE_UINT32 = 13,\n        TYPE_ENUM = 14,\n        TYPE_SFIXED32 = 15,\n        TYPE_SFIXED64 = 16,\n        TYPE_SINT32 = 17,\n        TYPE_SINT64 = 18,\n    }\n\n    export enum Cardinality {\n        CARDINALITY_UNKNOWN = 0,\n        CARDINALITY_OPTIONAL = 1,\n        CARDINALITY_REQUIRED = 2,\n        CARDINALITY_REPEATED = 3,\n    }\n}\n\nexport class Enum extends jspb.Message {\n    getName(): string;\n    setName(value: string): Enum;\n\n    clearEnumvalueList(): Enum;\n    getEnumvalueList(): EnumValue[];\n    setEnumvalueList(value: EnumValue[]): Enum;\n    addEnumvalue(value?: EnumValue, index?: number): EnumValue;\n\n    clearOptionsList(): Enum;\n    getOptionsList(): Option[];\n    setOptionsList(value: Option[]): Enum;\n    addOptions(value?: Option, index?: number): Option;\n\n    hasSourceContext(): boolean;\n    clearSourceContext(): Enum;\n    getSourceContext(): google_protobuf_source_context_pb.SourceContext | undefined;\n    setSourceContext(value?: google_protobuf_source_context_pb.SourceContext): Enum;\n\n    getSyntax(): Syntax;\n    setSyntax(value: Syntax): Enum;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Enum.AsObject;\n    static toObject(includeInstance: boolean, msg: Enum): Enum.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Enum, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Enum;\n    static deserializeBinaryFromReader(message: Enum, reader: jspb.BinaryReader): Enum;\n}\n\nexport namespace Enum {\n    export type AsObject = {\n        name: string;\n        enumvalueList: EnumValue.AsObject[];\n        optionsList: Option.AsObject[];\n        sourceContext?: google_protobuf_source_context_pb.SourceContext.AsObject | undefined;\n        syntax: Syntax;\n    };\n}\n\nexport class EnumValue extends jspb.Message {\n    getName(): string;\n    setName(value: string): EnumValue;\n\n    getNumber(): number;\n    setNumber(value: number): EnumValue;\n\n    clearOptionsList(): EnumValue;\n    getOptionsList(): Option[];\n    setOptionsList(value: Option[]): EnumValue;\n    addOptions(value?: Option, index?: number): Option;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): EnumValue.AsObject;\n    static toObject(includeInstance: boolean, msg: EnumValue): EnumValue.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: EnumValue, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): EnumValue;\n    static deserializeBinaryFromReader(message: EnumValue, reader: jspb.BinaryReader): EnumValue;\n}\n\nexport namespace EnumValue {\n    export type AsObject = {\n        name: string;\n        number: number;\n        optionsList: Option.AsObject[];\n    };\n}\n\nexport class Option extends jspb.Message {\n    getName(): string;\n    setName(value: string): Option;\n\n    hasValue(): boolean;\n    clearValue(): Option;\n    getValue(): google_protobuf_any_pb.Any | undefined;\n    setValue(value?: google_protobuf_any_pb.Any): Option;\n\n    serializeBinary(): Uint8Array;\n    toObject(includeInstance?: boolean): Option.AsObject;\n    static toObject(includeInstance: boolean, msg: Option): Option.AsObject;\n    static extensions: { [key: number]: jspb.ExtensionFieldInfo<jspb.Message> };\n    static extensionsBinary: { [key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message> };\n    static serializeBinaryToWriter(message: Option, writer: jspb.BinaryWriter): void;\n    static deserializeBinary(bytes: Uint8Array): Option;\n    static deserializeBinaryFromReader(message: Option, reader: jspb.BinaryReader): Option;\n}\n\nexport namespace Option {\n    export type AsObject = {\n        name: string;\n        value?: google_protobuf_any_pb.Any.AsObject | undefined;\n    };\n}\n\nexport enum Syntax {\n    SYNTAX_PROTO2 = 0,\n    SYNTAX_PROTO3 = 1,\n}\n"],"names":["Enum","EnumValue","Field","Option","Type","jspb","Message","Kind","Cardinality","Syntax"],"mappings":"AAAA,2BAA2B;AAC3B,mBAAmB;;;;;;;;;;;;IA6INA,IAAI;eAAJA;;IA0CAC,SAAS;eAATA;;IAjIAC,KAAK;eAALA;;IA+JAC,MAAM;eAANA;;;;;IA/MAC,IAAI;eAAJA;;;;iEAJS;AAIf,IAAA,AAAMA,OAAN,MAAMA,aAAaC,OAAKC,OAAO;AAmCtC;AAaO,IAAA,AAAMJ,QAAN,MAAMA,cAAcG,OAAKC,OAAO;AAyCvC;UAEiBJ;;cAcDK;;;;;;;;;;;;;;;;;;;;OAAAA,aAAAA,eAAAA;;cAsBAC;;;;;OAAAA,oBAAAA,sBAAAA;AAMhB,GA1CiBN,UAAAA;AA4CV,IAAA,AAAMF,OAAN,MAAMA,aAAaK,OAAKC,OAAO;AA8BtC;AAYO,IAAA,AAAML,YAAN,MAAMA,kBAAkBI,OAAKC,OAAO;AAoB3C;AAUO,IAAA,AAAMH,SAAN,MAAMA,eAAeE,OAAKC,OAAO;AAiBxC;;UASYG;;;GAAAA,WAAAA"}