// package: google.protobuf
// file: descriptor.proto
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DescriptorProto: function() {
        return DescriptorProto;
    },
    EnumDescriptorProto: function() {
        return EnumDescriptorProto;
    },
    EnumOptions: function() {
        return EnumOptions;
    },
    EnumValueDescriptorProto: function() {
        return EnumValueDescriptorProto;
    },
    EnumValueOptions: function() {
        return EnumValueOptions;
    },
    ExtensionRangeOptions: function() {
        return ExtensionRangeOptions;
    },
    FieldDescriptorProto: function() {
        return FieldDescriptorProto;
    },
    FieldOptions: function() {
        return FieldOptions;
    },
    FileDescriptorProto: function() {
        return FileDescriptorProto;
    },
    FileDescriptorSet: function() {
        return FileDescriptorSet;
    },
    FileOptions: function() {
        return FileOptions;
    },
    GeneratedCodeInfo: function() {
        return GeneratedCodeInfo;
    },
    MessageOptions: function() {
        return MessageOptions;
    },
    MethodDescriptorProto: function() {
        return MethodDescriptorProto;
    },
    MethodOptions: function() {
        return MethodOptions;
    },
    OneofDescriptorProto: function() {
        return OneofDescriptorProto;
    },
    OneofOptions: function() {
        return OneofOptions;
    },
    ServiceDescriptorProto: function() {
        return ServiceDescriptorProto;
    },
    ServiceOptions: function() {
        return ServiceOptions;
    },
    SourceCodeInfo: function() {
        return SourceCodeInfo;
    },
    UninterpretedOption: function() {
        return UninterpretedOption;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _index = /*#__PURE__*/ _interop_require_wildcard._(require("../../index"));
let FileDescriptorSet = class FileDescriptorSet extends _index.Message {
};
let FileDescriptorProto = class FileDescriptorProto extends _index.Message {
};
let DescriptorProto = class DescriptorProto extends _index.Message {
};
(function(DescriptorProto) {
    let ExtensionRange = class ExtensionRange extends _index.Message {
    };
    DescriptorProto.ExtensionRange = ExtensionRange;
    let ReservedRange = class ReservedRange extends _index.Message {
    };
    DescriptorProto.ReservedRange = ReservedRange;
})(DescriptorProto || (DescriptorProto = {}));
let ExtensionRangeOptions = class ExtensionRangeOptions extends _index.Message {
};
let FieldDescriptorProto = class FieldDescriptorProto extends _index.Message {
};
(function(FieldDescriptorProto) {
    let Type;
    (function(Type) {
        Type[Type["TYPE_DOUBLE"] = 1] = "TYPE_DOUBLE";
        Type[Type["TYPE_FLOAT"] = 2] = "TYPE_FLOAT";
        Type[Type["TYPE_INT64"] = 3] = "TYPE_INT64";
        Type[Type["TYPE_UINT64"] = 4] = "TYPE_UINT64";
        Type[Type["TYPE_INT32"] = 5] = "TYPE_INT32";
        Type[Type["TYPE_FIXED64"] = 6] = "TYPE_FIXED64";
        Type[Type["TYPE_FIXED32"] = 7] = "TYPE_FIXED32";
        Type[Type["TYPE_BOOL"] = 8] = "TYPE_BOOL";
        Type[Type["TYPE_STRING"] = 9] = "TYPE_STRING";
        Type[Type["TYPE_GROUP"] = 10] = "TYPE_GROUP";
        Type[Type["TYPE_MESSAGE"] = 11] = "TYPE_MESSAGE";
        Type[Type["TYPE_BYTES"] = 12] = "TYPE_BYTES";
        Type[Type["TYPE_UINT32"] = 13] = "TYPE_UINT32";
        Type[Type["TYPE_ENUM"] = 14] = "TYPE_ENUM";
        Type[Type["TYPE_SFIXED32"] = 15] = "TYPE_SFIXED32";
        Type[Type["TYPE_SFIXED64"] = 16] = "TYPE_SFIXED64";
        Type[Type["TYPE_SINT32"] = 17] = "TYPE_SINT32";
        Type[Type["TYPE_SINT64"] = 18] = "TYPE_SINT64";
    })(Type = FieldDescriptorProto.Type || (FieldDescriptorProto.Type = {}));
    let Label;
    (function(Label) {
        Label[Label["LABEL_OPTIONAL"] = 1] = "LABEL_OPTIONAL";
        Label[Label["LABEL_REQUIRED"] = 2] = "LABEL_REQUIRED";
        Label[Label["LABEL_REPEATED"] = 3] = "LABEL_REPEATED";
    })(Label = FieldDescriptorProto.Label || (FieldDescriptorProto.Label = {}));
})(FieldDescriptorProto || (FieldDescriptorProto = {}));
let OneofDescriptorProto = class OneofDescriptorProto extends _index.Message {
};
let EnumDescriptorProto = class EnumDescriptorProto extends _index.Message {
};
(function(EnumDescriptorProto) {
    let EnumReservedRange = class EnumReservedRange extends _index.Message {
    };
    EnumDescriptorProto.EnumReservedRange = EnumReservedRange;
})(EnumDescriptorProto || (EnumDescriptorProto = {}));
let EnumValueDescriptorProto = class EnumValueDescriptorProto extends _index.Message {
};
let ServiceDescriptorProto = class ServiceDescriptorProto extends _index.Message {
};
let MethodDescriptorProto = class MethodDescriptorProto extends _index.Message {
};
let FileOptions = class FileOptions extends _index.Message {
};
(function(FileOptions) {
    let OptimizeMode;
    (function(OptimizeMode) {
        OptimizeMode[OptimizeMode["SPEED"] = 1] = "SPEED";
        OptimizeMode[OptimizeMode["CODE_SIZE"] = 2] = "CODE_SIZE";
        OptimizeMode[OptimizeMode["LITE_RUNTIME"] = 3] = "LITE_RUNTIME";
    })(OptimizeMode = FileOptions.OptimizeMode || (FileOptions.OptimizeMode = {}));
})(FileOptions || (FileOptions = {}));
let MessageOptions = class MessageOptions extends _index.Message {
};
let FieldOptions = class FieldOptions extends _index.Message {
};
(function(FieldOptions) {
    let CType;
    (function(CType) {
        CType[CType["STRING"] = 0] = "STRING";
        CType[CType["CORD"] = 1] = "CORD";
        CType[CType["STRING_PIECE"] = 2] = "STRING_PIECE";
    })(CType = FieldOptions.CType || (FieldOptions.CType = {}));
    let JSType;
    (function(JSType) {
        JSType[JSType["JS_NORMAL"] = 0] = "JS_NORMAL";
        JSType[JSType["JS_STRING"] = 1] = "JS_STRING";
        JSType[JSType["JS_NUMBER"] = 2] = "JS_NUMBER";
    })(JSType = FieldOptions.JSType || (FieldOptions.JSType = {}));
})(FieldOptions || (FieldOptions = {}));
let OneofOptions = class OneofOptions extends _index.Message {
};
let EnumOptions = class EnumOptions extends _index.Message {
};
let EnumValueOptions = class EnumValueOptions extends _index.Message {
};
let ServiceOptions = class ServiceOptions extends _index.Message {
};
let MethodOptions = class MethodOptions extends _index.Message {
};
(function(MethodOptions) {
    let IdempotencyLevel;
    (function(IdempotencyLevel) {
        IdempotencyLevel[IdempotencyLevel["IDEMPOTENCY_UNKNOWN"] = 0] = "IDEMPOTENCY_UNKNOWN";
        IdempotencyLevel[IdempotencyLevel["NO_SIDE_EFFECTS"] = 1] = "NO_SIDE_EFFECTS";
        IdempotencyLevel[IdempotencyLevel["IDEMPOTENT"] = 2] = "IDEMPOTENT";
    })(IdempotencyLevel = MethodOptions.IdempotencyLevel || (MethodOptions.IdempotencyLevel = {}));
})(MethodOptions || (MethodOptions = {}));
let UninterpretedOption = class UninterpretedOption extends _index.Message {
};
(function(UninterpretedOption) {
    let NamePart = class NamePart extends _index.Message {
    };
    UninterpretedOption.NamePart = NamePart;
})(UninterpretedOption || (UninterpretedOption = {}));
let SourceCodeInfo = class SourceCodeInfo extends _index.Message {
};
(function(SourceCodeInfo) {
    let Location = class Location extends _index.Message {
    };
    SourceCodeInfo.Location = Location;
})(SourceCodeInfo || (SourceCodeInfo = {}));
let GeneratedCodeInfo = class GeneratedCodeInfo extends _index.Message {
};
(function(GeneratedCodeInfo) {
    let Annotation = class Annotation extends _index.Message {
    };
    GeneratedCodeInfo.Annotation = Annotation;
})(GeneratedCodeInfo || (GeneratedCodeInfo = {}));

//# sourceMappingURL=descriptor_pb.d.js.map