{"version":3,"sources":["../../../../../packages/ws/src/lib/ws.ts"],"sourcesContent":["import { Wcferry, WcferryOptions } from '@wcferry/core';\r\nimport debug from 'debug';\r\nimport ws from 'ws';\r\n\r\nconst logger = debug('wcferry:ws');\r\n\r\nexport interface IncomingMessage {\r\n    id: string;\r\n    method: string;\r\n    params?: unknown[];\r\n}\r\n\r\ntype CallableMethod<T> = {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    [K in keyof T]: T[K] extends (...args: any[]) => any ? K : never;\r\n}[keyof T];\r\nconst AllowedBuiltinMethods: Array<CallableMethod<Wcferry>> = [\r\n    'acceptNewFriend',\r\n    'addChatRoomMembers',\r\n    'dbSqlQuery',\r\n    'decryptImage',\r\n    'delChatRoomMembers',\r\n    'downloadAttach',\r\n    'downloadImage',\r\n    'forwardMsg',\r\n    'getAliasInChatRoom',\r\n    'getAudioMsg',\r\n    'getChatRoomMembers',\r\n    'getChatRooms',\r\n    'getContact',\r\n    'getContacts',\r\n    'getDbNames',\r\n    'getFriends',\r\n    'getMsgTypes',\r\n    'getOCRResult',\r\n    'getSelfWxid',\r\n    'getUserInfo',\r\n    'inviteChatroomMembers',\r\n    'isLogin',\r\n    'receiveTransfer',\r\n    'refreshPyq',\r\n    'revokeMsg',\r\n    'sendFile',\r\n    'sendImage',\r\n    'sendPat',\r\n    'sendRichText',\r\n    'sendTxt',\r\n];\r\n\r\nexport class WcfWSServer {\r\n    private wss: ws.WebSocketServer;\r\n    constructor(private wcferry: Wcferry, options?: ws.ServerOptions) {\r\n        this.wss = new ws.WebSocketServer({\r\n            port: 8000,\r\n            ...options,\r\n        });\r\n        this.listen();\r\n    }\r\n\r\n    static start(options?: { wcferry: WcferryOptions; ws: ws.ServerOptions }) {\r\n        const wcferry = new Wcferry(options?.wcferry);\r\n        wcferry.start();\r\n        logger('new websocket server: %O', options?.ws);\r\n        return new WcfWSServer(wcferry, options?.ws);\r\n    }\r\n\r\n    private off?: () => void;\r\n\r\n    private listen() {\r\n        this.wss.on('error', (err) => {\r\n            logger(`Websocket server error: %O`, err);\r\n        });\r\n\r\n        this.wss.on('connection', (ws) => {\r\n            logger('Wcferry websocket server is started...');\r\n            ws.on('error', (err) => {\r\n                logger(`Websokcet server error: %O`, err);\r\n            });\r\n            ws.on('message', async (data) => {\r\n                const req = this.parseReq(data.toString('utf8'));\r\n                if (req) {\r\n                    logger(\r\n                        '-> recv %s [%s]: %o',\r\n                        req.id,\r\n                        req.method,\r\n                        req.params\r\n                    );\r\n                    if (AllowedBuiltinMethods.some((m) => m === req.method)) {\r\n                        const ret = await this.executeCommand(\r\n                            req.method as CallableMethod<Wcferry>,\r\n                            req.params\r\n                        );\r\n                        this.send(ws, req.id, ret);\r\n                    }\r\n                    switch (req.method) {\r\n                        case 'recvPyq':\r\n                            this.wcferry.recvPyq = !!req.params?.[0];\r\n                            this.send(ws, req.id, { result: true });\r\n                            return;\r\n                        case 'message.enable':\r\n                            try {\r\n                                this.off ??= this.wcferry.on((msg) => {\r\n                                    logger('<- msg %o', msg.raw);\r\n                                    ws.send(\r\n                                        JSON.stringify({\r\n                                            type: 'message',\r\n                                            data: msg.raw,\r\n                                        })\r\n                                    );\r\n                                });\r\n                                this.send(ws, req.id, { result: true });\r\n                            } catch (err) {\r\n                                this.send(ws, req.id, {\r\n                                    error: {\r\n                                        message: this.formatError(err),\r\n                                        code: -2,\r\n                                    },\r\n                                });\r\n                            }\r\n                            return;\r\n                        case 'message.disable':\r\n                            try {\r\n                                this.off?.();\r\n                                this.send(ws, req.id, { result: true });\r\n                            } catch (err) {\r\n                                this.send(ws, req.id, {\r\n                                    error: {\r\n                                        message: this.formatError(err),\r\n                                        code: -2,\r\n                                    },\r\n                                });\r\n                            }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    send(\r\n        ws: ws.WebSocket,\r\n        id: string,\r\n        payload:\r\n            | { result: unknown }\r\n            | { error: { message: string; code?: number } }\r\n    ) {\r\n        const resp = {\r\n            id,\r\n            ...payload,\r\n        };\r\n        logger('<- resp %s %o', id, payload);\r\n        ws.send(JSON.stringify(resp));\r\n    }\r\n\r\n    private async executeCommand(\r\n        method: CallableMethod<Wcferry>,\r\n        params: unknown[] = []\r\n    ) {\r\n        try {\r\n            // eslint-disable-next-line prefer-spread\r\n            const ret = await (\r\n                this.wcferry[method] as (...args: unknown[]) => unknown\r\n            )(...params);\r\n            return { result: ret };\r\n        } catch (err) {\r\n            return {\r\n                error: {\r\n                    message: `Execute ${method} failed: ${this.formatError(\r\n                        err\r\n                    )}`,\r\n                    code: -1,\r\n                },\r\n            };\r\n        }\r\n    }\r\n\r\n    private formatError(err: unknown) {\r\n        return err instanceof Error ? err.message : `${err}`;\r\n    }\r\n\r\n    private parseReq(data: string): IncomingMessage | undefined {\r\n        try {\r\n            const json = JSON.parse(data);\r\n            if (\r\n                typeof json.id === 'number' &&\r\n                typeof json.method === 'string'\r\n            ) {\r\n                return json as IncomingMessage;\r\n            }\r\n            return undefined;\r\n        } catch {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.wss.close();\r\n    }\r\n}\r\n"],"names":["WcfWSServer","logger","debug","AllowedBuiltinMethods","start","options","wcferry","Wcferry","ws","listen","wss","on","err","data","req","parseReq","toString","id","method","params","some","m","ret","executeCommand","send","recvPyq","result","off","msg","raw","JSON","stringify","type","error","message","formatError","code","payload","resp","Error","json","parse","undefined","close","constructor","WebSocketServer","port"],"mappings":"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"}