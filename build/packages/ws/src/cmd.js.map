{"version":3,"sources":["../../../../packages/ws/src/cmd.ts"],"sourcesContent":["import { program } from 'commander';\r\nimport pkg from '../package.json';\r\nimport { WcfWSServer } from './lib/ws';\r\n\r\nfunction main() {\r\n    program\r\n        .name('wcfwebsocket')\r\n        .version(pkg.version)\r\n        .description('start a wcferry websocket server')\r\n        .option('-p,--port <number>', 'websocket port', '8000')\r\n        .option('-h,--host <string>', 'websocket host', '127.0.0.1')\r\n        .option('-P,--rpc-port <number>', 'wcferry rpc endpoint', '10086')\r\n        .option(\r\n            '-H, --rpc-host <string>',\r\n            'wcferry rpc host. if empty, program will try to execute wcferry.exe',\r\n            ''\r\n        )\r\n        .action((options) => {\r\n            WcfWSServer.start({\r\n                wcferry: {\r\n                    port: Number.parseInt(options.rpcPort, 10) || 10086,\r\n                    host: options.rpcHost,\r\n                },\r\n                ws: {\r\n                    port: Number.parseInt(options.port, 10) || 8000,\r\n                    host: options.host,\r\n                },\r\n            });\r\n        });\r\n    program.parse();\r\n}\r\n\r\nvoid main();\r\n"],"names":["main","program","name","version","pkg","description","option","action","options","WcfWSServer","start","wcferry","port","Number","parseInt","rpcPort","host","rpcHost","ws","parse"],"mappings":";;;;;2BAAwB;sEACR;oBACY;AAE5B,SAASA;IACLC,kBAAO,CACFC,IAAI,CAAC,gBACLC,OAAO,CAACC,oBAAG,CAACD,OAAO,EACnBE,WAAW,CAAC,oCACZC,MAAM,CAAC,sBAAsB,kBAAkB,QAC/CA,MAAM,CAAC,sBAAsB,kBAAkB,aAC/CA,MAAM,CAAC,0BAA0B,wBAAwB,SACzDA,MAAM,CACH,2BACA,uEACA,IAEHC,MAAM,CAAC,CAACC;QACLC,eAAW,CAACC,KAAK,CAAC;YACdC,SAAS;gBACLC,MAAMC,OAAOC,QAAQ,CAACN,QAAQO,OAAO,EAAE,OAAO;gBAC9CC,MAAMR,QAAQS,OAAO;YACzB;YACAC,IAAI;gBACAN,MAAMC,OAAOC,QAAQ,CAACN,QAAQI,IAAI,EAAE,OAAO;gBAC3CI,MAAMR,QAAQQ,IAAI;YACtB;QACJ;IACJ;IACJf,kBAAO,CAACkB,KAAK;AACjB;AAEA,KAAKnB"}